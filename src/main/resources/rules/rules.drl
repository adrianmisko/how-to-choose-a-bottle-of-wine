package sample;
import java.sql.SQLOutput
import sample.Result

global Controller controller;

rule "First question"
    when

    then
        Question question = new Question("Who is going to drink it?");
        question.getPossibleAnswers().add("Personal use");
        question.getPossibleAnswers().add("Someone else");
        controller.newQuestion(question);
end


rule "Social gathering"
    when
        Answer(text == "Someone else", questionText == "Who is going to drink it?")
    then
        Question question = new Question("Are you at a social gathering?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "Determine type of gathering"
    when
        a: Answer(text == "Yes", questionText == "Are you at a social gathering?")
    then
        Question question = new Question("What kind of gathering?");
        question.getPossibleAnswers().add("Art opening");
        question.getPossibleAnswers().add("Beach BBQ");
        question.getPossibleAnswers().add("Dinner party");
        question.getPossibleAnswers().add("Bachelor(ette) party");
        question.getPossibleAnswers().add("Get together");
        controller.newQuestion(question);
end


rule "Wine for wine lovers"
    when
        Answer(text == "Yes", questionText == "Do you know them?") or
        Answer(text == "No", questionText == "Are you at a social gathering?")
    then
        Question question = new Question("Are they wine lovers?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "Determie if user knows them"
    when
        Answer(text == "Yes", questionText == "Are they wine lovers?")
        Answer(text == "No", questionText == "Are you at a social gathering?")
    then
        Question question = new Question("Do you really know them?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "Determine if they're his favourite people in the world"
    when
        Answer(text == "Yes", questionText == "Do you really know them?") or
        (Answer(text == "Yes", questionText == "Are they wine lovers?") and
        Answer(text == "Yes", questionText == "Do you know them?"))
    then
        Question question = new Question("Are they your favourite people in the world? Be honest.");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User's wine is CALIFORNIA PINOT NOIR"
    when
        Answer(text == "Yes", questionText == "Are they your favourite people in the world? Be honest.") or
        Answer(text == "1st", questionText == "Which anniversary?") or
        Answer(text == "Old", questionText == "Somebody who's old person or young?")
    then
        Result result =  new Result("Hedonistic joy ride CALIFORNIA PINOT NOIR", "California Pinot Noir.png");
        controller.showResult(result);
end


rule "User's wine is 2-BUCK CHUCK"
    when
        Answer(text == "Art opening", questionText == "What kind of gathering?")
    then
        Result result =  new Result("They rarely have a sense of taste 2-BUCK CHUCK", "2_buck_chuck.jpg");
        controller.showResult(result);
end


rule "User's wine has been confiscated"
    when
        Answer(text == "Beach BBQ", questionText == "What kind of gathering?")
    then
        Result result =  new Result("Bought a nice bottle but it was confiscated. No glass on the beach", "no_glass.jpg");
        controller.showResult(result);
end


rule "Tell who's cooking dinner"
    when
        Answer(text == "Dinner party", questionText == "What kind of gathering?")
    then
        Question question = new Question("Who is cooking?");
        question.getPossibleAnswers().add("Them");
        question.getPossibleAnswers().add("Me");
        controller.newQuestion(question);
end


rule "User's wine is the biggest bottle WITH THE WORDS 'RED BLEND"
    when
        Answer(text == "Them", questionText == "Who is cooking?")
    then
        Result result =  new Result("Buy the biggest bottle WITH THE WORDS 'RED BLEND'", "red_blend.jpg");
        controller.showResult(result);
end


rule "User's friends don't deserve wine"
    when
        Answer(text == "Me", questionText == "Who is cooking?") or
        Answer(text == "No", questionText == "Are they wine lovers?") or
        Answer(text == "No", questionText == "Do you really know them?") or
        Answer(text == "No", questionText == "Are they your favourite people in the world? Be honest.")
    then
        Result result =  new Result("They don't deserve wine. Get out of my flowchart", "go_away.png");
        controller.showResult(result);
end


rule "User should bring BRING WHISKEY OR VODKA instead of wine"
    when
        Answer(text == "Bachelor(ette) party", questionText == "What kind of gathering?")
    then
        Result result =  new Result("Leave your wine at home BRING WHISKEY OR VODKA", "Whiskey-or-Vodka.jpg");
        controller.showResult(result);
end


rule "Determine if user knows people he's meeting"
    when
        Answer(text == "Get together", questionText == "What kind of gathering?")
    then
        Question question = new Question("Do you know them?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should bring a boring bottle & HOPE NO ONE OPENS IT"
    when
        Answer(text == "No", questionText == "Do you know them?")
    then
        Result result =  new Result("Bring a boring bottle & HOPE NO ONE OPENS IT", "boring.jpg");
        controller.showResult(result);
end


rule "Tell if user is at home"
    when
        Answer(text == "Personal use", questionText == "Who is going to drink it?")
    then
        Question question = new Question("Are you at home?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "Get what occasion is it"
    when
        Answer(text == "No", questionText == "Are you at home?")
    then
        Question question = new Question("What occasion is it?");
        question.getPossibleAnswers().add("Drinking in public");
        question.getPossibleAnswers().add("Camping");
        question.getPossibleAnswers().add("Dinner");
        question.getPossibleAnswers().add("Restaurant");
        question.getPossibleAnswers().add("Special occasions");
        controller.newQuestion(question);
end


rule "User should get SINGLE SERVE BOX WINE"
    when
        Answer(text == "Drinking in public" || text == "Camping", questionText == "What occasion is it?")
    then
        Result result =  new Result("No cork screw reo SINGLE SERVE BOX WINE", "singleserve.jpg");
        controller.showResult(result);
end


rule "Tell if wine is a dinner's main course"
    when
        Answer(text == "Dinner", questionText == "What occasion is it?") or
        Answer(text == "No", questionText == "Are you alone at home?")
    then
        Question question = new Question("Is wine the main course?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should go for something exotic like SANGIOVESE or GRENACHE"
    when
        Answer(text == "Yes", questionText == "Is wine the main course?") or
        Answer(text == "OUI.", questionText == "Are you going to feel fancy?") or
        Answer(text == "Yes", questionText == "Are you alone at New Years Eve?")
    then
        Result result =  new Result("Go for something exotic SANGIOVESE or GRENACHE", "grenache-vs-sangiovese.jpg");
        controller.showResult(result);
end


rule "Tell if dinner is from microvawe"
    when
        Answer(text == "No", questionText == "Is wine the main course?")
    then
        Question question = new Question("Is it dinner from a microwave?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should buy 3 LITER BOX WINE"
    when
        Answer(text == "Yes", questionText == "Is it dinner from a microwave?") or
        Answer(text == "Yes", questionText == "Is it order from a window?")
    then
        Result result =  new Result("Go budget. Go bulk. 3 LITER BOX WINE", "3-liters.jpg");
        controller.showResult(result);
end


rule "Tell if user is cooking with his wine"
    when
        Answer(text == "No", questionText == "Is it dinner from a microwave?")
    then
        Question question = new Question("Are you cooking /W your wine?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should get SAUVIGNON BLANC"
    when
        Answer(text == "Yes", questionText == "Are you cooking /W your wine?")
    then
        Result result =  new Result("Wine &<$9 such as SAUVIGNON BLANC", "SauvBlanc_WEB.jpg");
        controller.showResult(result);
end


rule "Tell if user is kool-aid man"
    when
        Answer(text == "No", questionText == "Are you cooking /W your wine?") or
        Answer(text == "Yes", questionText == "Are you drinking wine daily?")
    then
        Question question = new Question("Are you kool-aid man?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should buy fruit forward wine ARGENTINIAN MALBEC"
    when
        Answer(text == "Yes", questionText == "Are you kool-aid man?")
    then
        Result result =  new Result("Fruit forward wine ARGENTINIAN MALBEC", "Argentinian-Malbec.jpg");
        controller.showResult(result);
end


rule "Determine if user used to eat dirt as a child"
    when
        Answer(text == "No", questionText == "Are you kool-aid man?")
    then
        Question question = new Question("Did you use to eat dirt as a child?");
        question.getPossibleAnswers().add("Yum");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should get CHINON or BOURGUEIL"
    when
        Answer(text == "Yum", questionText == "Did you use to eat dirt as a child?")
    then
        Result result =  new Result("Something earthy CHINON or BOURGUEIL", "bourgueil-vs-chinon.jpg");
        controller.showResult(result);
end


rule "Determine if user had spray butter in his mouth"
    when
        Answer(text == "No", questionText == "Did you use to eat dirt as a child?")
    then
        Question question = new Question("Did you have the spray butter in your mouth?");
        question.getPossibleAnswers().add("Yep");
        question.getPossibleAnswers().add("No!");
        controller.newQuestion(question);
end


rule "User should get BUTTERY CHARDONNAY"
    when
        Answer(text == "Yep", questionText == "Did you have the spray butter in your mouth?")
    then
        Result result =  new Result("Please bring me my BUTTERY CHARDONNAY", "chardonney.png");
        controller.showResult(result);
end


rule "User should get out"
    when
        Answer(text == "No!", questionText == "Did you have the spray butter in your mouth?") or
        Answer(text == "What?", questionText == "Is your wine collection new or old world?")
    then
        Result result =  new Result("Thx for playin' now get out of my flowchart", "go_away.png");
        controller.showResult(result);
end


rule "Tell if user is alone at home"
    when
        Answer(text == "Yes", questionText == "Are you at home?")
    then
        Question question = new Question("Are you alone at home?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "Tell if user is recovering from work"
    when
        Answer(text == "Yes", questionText == "Are you alone at home?")
    then
        Question question = new Question("Are you recovering from work?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should get PINOT NOIR"
    when
        Answer(text == "Yes", questionText == "Are you recovering from work?")
    then
        Result result =  new Result("Sniff your class of PINOT NOIR", "Pinot-Noir.jpg");
        controller.showResult(result);
end


rule "Determine if user is going to get drunk"
    when
        Answer(text == "No", questionText == "Are you recovering from work?")
    then
        Question question = new Question("Are you going to getting drunk?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should go for ZINFANDEL or SHIRAZ"
    when
        Answer(text == "Yes", questionText == "Are you going to getting drunk?")
    then
        Result result =  new Result("Go for high octane ZINFANDEL or SHIRAZ", "shiraz-vs-zinfandel.jpg");
        controller.showResult(result);
end


rule "Tell user if going to feel fancy"
    when
        Answer(text == "No", questionText == "Are you going to getting drunk?")
    then
        Question question = new Question("Are you going to feel fancy?");
        question.getPossibleAnswers().add("OUI.");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "Determine if user is drinking wine daily"
    when
        Answer(text == "No", questionText == "Are you going to feel fancy?")
    then
        Question question = new Question("Are you drinking wine daily?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "Determine if user's collection of wine is new or old world"
    when
        Answer(text == "No", questionText == "Are you drinking wine daily?") or
        Answer(text == "Yes", questionText == "Can you pronounce the menu?")
    then
        Question question = new Question("Is your wine collection new or old world?");
        question.getPossibleAnswers().add("Old!");
        question.getPossibleAnswers().add("New");
        question.getPossibleAnswers().add("What?");
        controller.newQuestion(question);
end


rule "User should go for BORDEAUX or BURGUNDY"
    when
        Answer(text == "Old!", questionText == "Is your wine collection new or old world?")
    then
        Result result =  new Result("Why buy anything but BORDEAUX or BURGUNDY", "bourgogne-vs-bordeaux.jpg");
        controller.showResult(result);
end


rule "Determine if user is into cults"
    when
        Answer(text == "New", questionText == "Is your wine collection new or old world?")
    then
        Question question = new Question("Are you into cults?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should go for SINE QUA NON or CAYUSE"
    when
        Answer(text == "Yes", questionText == "Are you into cults?")
    then
        Result result =  new Result("Cult classic SINE QUA NON or CAYUSE", "sine_qua_non-vs-cayuse.jpg");
        controller.showResult(result);
end


rule "User should go for CALIFORNIA CABERNET"
    when
        Answer(text == "No", questionText == "Are you into cults?") or
        Answer(text == "No", questionText == "Is it order from a window?")
    then
        Result result =  new Result("Drink a bottle of sun CALIFORNIA CABERNET", "california_cabernet.jpg");
        controller.showResult(result);
end


rule "Tell if it's a fancy restaurant"
    when
        Answer(text == "Restaurant", questionText == "What occasion is it?")
    then
        Question question = new Question("Is it a fancy restaurant?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end

rule "Tell if user's ordering from a window"
    when
        Answer(text == "No", questionText == "Is it a fancy restaurant?")
    then
        Question question = new Question("Is it order from a window?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "Determine if user can pronounce the menu"
    when
        Answer(text == "Yes", questionText == "Is it a fancy restaurant?")
    then
        Question question = new Question("Can you pronounce the menu?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should ask for COTES DU RHONE"
    when
        Answer(text == "No", questionText == "Can you pronounce the menu?")
    then
        Result result =  new Result("Ask for COTES DU RHONE", "Cotes-du-Rhone.png");
        controller.showResult(result);
end


rule "Tell what special ocassion is it"
    when
        Answer(text == "Special occasions", questionText == "What occasion is it?")
    then
        Question question = new Question("What special occasion is it?");
        question.getPossibleAnswers().add("Anniversary");
        question.getPossibleAnswers().add("Eloping");
        question.getPossibleAnswers().add("Birthday");
        question.getPossibleAnswers().add("Blind date");
        question.getPossibleAnswers().add("New Years Eve");
        controller.newQuestion(question);
end


rule "Determine which anniversary it is"
    when
        Answer(text == "Anniversary", questionText == "What special occasion is it?")
    then
        Question question = new Question("Which anniversary?");
        question.getPossibleAnswers().add("1st");
        question.getPossibleAnswers().add("2+");
        controller.newQuestion(question);
end


rule "User should go for MERLOT"
    when
        Answer(text == "2+", questionText == "Which anniversary?")
    then
        Result result =  new Result("Complacency is a bitch MERLOT", "merlot-scheda.png");
        controller.showResult(result);
end


rule "Determine age of person who's having birthday"
    when
        Answer(text == "Birthday", questionText == "What special occasion is it?")
    then
        Question question = new Question("Somebody who's old person or young?");
        question.getPossibleAnswers().add("Old");
        question.getPossibleAnswers().add("Young");
        controller.newQuestion(question);
end


rule "User should RIESLING or CHENIN BLANC"
    when
        Answer(text == "Young", questionText == "Somebody who's old person or young?") or
        Answer(text == "Eloping", questionText == "What special occasion is it?") or
        Answer(text == "Blind date", questionText == "What special occasion is it?")
    then
        Result result =  new Result("Something sweet RIESLING or CHENIN BLANC", "cheninblanc-vs-riesling.jpg");
        controller.showResult(result);
end


rule "Determine if user is alone at New Years Eve"
    when
        Answer(text == "New Years Eve", questionText == "What special occasion is it?")
    then
        Question question = new Question("Are you alone at New Years Eve?");
        question.getPossibleAnswers().add("Yes");
        question.getPossibleAnswers().add("No");
        controller.newQuestion(question);
end


rule "User should get SPANISH CAVA"
    when
        Answer(text == "No", questionText == "Are you alone at New Years Eve?")
    then
        Result result =  new Result("Cheap bubbly SPANISH CAVA", "spanish_cava.jpg");
        controller.showResult(result);
end